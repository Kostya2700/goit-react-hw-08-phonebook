{"version":3,"file":"static/js/632.71d8e006.chunk.js","mappings":"qPAkBMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KA6ElB,UA1EiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAa1B,OACE,SAAC,KAAD,CAAWC,KAAK,KAAhB,UACE,2BACGH,IACC,+BACE,UAAC,KAAD,CAAOI,OAAO,QAAd,WACE,SAAC,KAAD,KACA,SAAC,KAAD,wHACA,SAAC,IAAD,oLAIN,SAAC,KAAD,CAASC,GAAG,KAAKC,KAAK,KAAKC,UAAU,SAArC,gMAGA,SAAC,KAAD,WACE,kBAAMC,SA3BO,SAAAC,GACnBA,EAAEC,iBACF,IAAMrB,EAAOoB,EAAEE,cACfhB,EACEiB,EAAAA,EAAAA,SAAwB,CACtBC,KAAMxB,EAAKyB,SAASD,KAAKE,MACzBC,MAAO3B,EAAKyB,SAASE,MAAMD,MAC3BE,SAAU5B,EAAKyB,SAASG,SAASF,QAGtC,EAiBqCG,MAAO9B,EAAOC,KAAM8B,aAAa,MAA/D,WACE,SAAC,KAAD,CACEA,aAAa,MACbC,YAAY,qBACZC,KAAK,OACLR,KAAK,OACLS,GAAI,KAEN,SAAC,KAAD,CACEH,aAAa,MACbC,YAAY,iCACZC,KAAK,QACLR,KAAK,QACLS,GAAI,KAGN,UAAC,KAAD,CAAYhB,KAAK,KAAKgB,GAAI,EAA1B,WACE,SAAC,KAAD,CACEH,aAAa,MACbN,KAAK,WACLU,GAAG,SACHF,KAAMvB,EAAO,OAAS,WACtBsB,YAAY,oBAEd,SAAC,KAAD,CAAmB9B,MAAM,SAAzB,UACE,SAAC,KAAD,CAAQkC,EAAE,UAAUlB,KAAK,KAAKmB,QAvDxB,kBAAM1B,GAASD,EAAf,EAuDN,SACGA,EAAO,OAAS,eAIvB,SAAC,KAAD,WACE,SAAC,KAAD,CAAQuB,KAAK,SAASK,YAAY,OAAlC,mHASb,C","sources":["components/Register/Register.jsx"],"sourcesContent":["import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Button,\n  Center,\n  Container,\n  Heading,\n  Input,\n  InputGroup,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport { authOperations } from 'auth';\nimport { getErrorR } from 'auth/auth-selectors';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\nconst Register = () => {\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const error = useSelector(getErrorR);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      authOperations.register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n  };\n  return (\n    <Container maxW=\"md\">\n      <div>\n        {error && (\n          <>\n            <Alert status=\"error\">\n              <AlertIcon />\n              <AlertTitle>Помилка реєстрації!</AlertTitle>\n              <AlertDescription>Перевірте правильність даних.</AlertDescription>\n            </Alert>\n          </>\n        )}\n        <Heading as=\"h3\" size=\"lg\" textAlign=\"center\">\n          Введіть дані щоб зареєструватися\n        </Heading>\n        <Center>\n          <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n            <Input\n              autoComplete=\"off\"\n              placeholder=\"Імя\"\n              type=\"text\"\n              name=\"name\"\n              mb={5}\n            />\n            <Input\n              autoComplete=\"off\"\n              placeholder=\"Почта\"\n              type=\"email\"\n              name=\"email\"\n              mb={5}\n            />\n\n            <InputGroup size=\"md\" mb={5}>\n              <Input\n                autoComplete=\"off\"\n                name=\"password\"\n                pr=\"4.5rem\"\n                type={show ? 'text' : 'password'}\n                placeholder=\"Enter password\"\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                  {show ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n            <Center>\n              <Button type=\"submit\" colorScheme=\"blue\">\n                Зареєструватися\n              </Button>\n            </Center>\n          </form>\n        </Center>\n      </div>\n    </Container>\n  );\n};\nexport default Register;\n"],"names":["styles","form","width","label","display","flexDirection","marginBottom","dispatch","useDispatch","useState","show","setShow","error","useSelector","getErrorR","maxW","status","as","size","textAlign","onSubmit","e","preventDefault","currentTarget","authOperations","name","elements","value","email","password","style","autoComplete","placeholder","type","mb","pr","h","onClick","colorScheme"],"sourceRoot":""}