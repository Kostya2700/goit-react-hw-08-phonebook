{"version":3,"file":"static/js/299.d35c3d53.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","redux/selectors.js","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.jsx","components/Title/Title.jsx","components/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"big_button\":\"Form_big_button__yHYqp\"};","export const getStateContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getStateFilter = state => state.filter.value;\n","import React from 'react';\nimport css from '../Form/Form.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getStateContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { Button, Input } from '@chakra-ui/react';\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const arrContacts = useSelector(getStateContacts);\n  const formSubmit = e => {\n    e.preventDefault();\n    const forms = e.currentTarget.elements;\n    const normalizedFilter = forms.name.value.toLowerCase();\n\n    const checkByName = arrContacts.find(\n      contact => contact.name.toLowerCase() === normalizedFilter\n    );\n    if (checkByName) {\n      e.currentTarget.reset();\n      alert('this contacts is written in phonebook');\n      return;\n    }\n    dispatch(\n      addContact({\n        name: forms.name.value,\n        number: forms.number.value,\n      })\n    );\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={formSubmit} autoComplete=\"off\">\n      <Input\n        variant=\"flushed\"\n        placeholder=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      />\n      <Input\n        variant=\"flushed\"\n        placeholder=\"Number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      />\n      {/* <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </label> */}\n\n      {/* <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label> */}\n      <Button\n        type=\"submit\"\n        colorScheme=\"teal\"\n        variant=\"solid\"\n        className={css.big_button}\n      >\n        Add contacts\n      </Button>\n      {/* <button type=\"submit\" className={css.big_button}>\n        Add contacts\n      </button> */}\n    </form>\n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"div_form\":\"Phonebook_div_form__k8Rl8\",\"btn_item\":\"Phonebook_btn_item__Df2hC\"};","import { Input } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { filter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    const value = e.currentTarget.value;\n    dispatch(filter(value));\n  };\n  return (\n    <Input\n      size=\"sm\"\n      placeholder=\"Search contacts\"\n      type=\"text\"\n      onChange={e => {\n        changeFilter(e);\n      }}\n    />\n  );\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ListItem_item__3+qKK\"};","import React from 'react';\nimport css from '../ListItem/ListItem.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { getStateContacts, getStateFilter } from 'redux/selectors';\nimport { Button, Text } from '@chakra-ui/react';\nconst ListItem = () => {\n  const arrContacts = useSelector(getStateContacts);\n  const filterValue = useSelector(getStateFilter);\n  const dispatch = useDispatch();\n\n  const getFilterContact = () => {\n    if (filterValue === '') return arrContacts;\n    return arrContacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filterValue.toLowerCase());\n    });\n  };\n  const filterArrayContacts = getFilterContact();\n  return (\n    <ul>\n      {filterArrayContacts?.map(({ id, name, number }) => (\n        <li key={id} className={css.item}>\n          <Text as=\"samp\">{name}</Text>:<Text as=\"samp\">{number}</Text>\n          <Button\n            size=\"xs\"\n            colorScheme=\"teal\"\n            variant=\"outline\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </Button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default ListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Center, Text } from '@chakra-ui/react';\nexport const Title = ({ title }) => {\n  return (\n    <Center>\n      <Text as=\"u\" fontSize=\"30px\">\n        {title}\n      </Text>\n    </Center>\n  );\n};\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport Form from 'components/Form/Form';\nimport css from '../Phonebook/Phonebook.module.css';\nimport Filter from 'components/Filter/Filter';\nimport ListItem from 'components/ListItem/ListItem';\nimport { Title } from 'components/Title/Title';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getError, getIsLoading, getStateContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { Container } from '@chakra-ui/react';\n\nfunction Phonebook() {\n  const arrContacts = useSelector(getStateContacts);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(getIsLoading);\n  // const error = useSelector(getError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container maxW=\"md\">\n      <>\n        <div className={css.div_form}>\n          <Title title={'Please write contacts'} />\n\n          <Form />\n        </div>\n        {arrContacts.length ? (\n          <>\n            <Title title={'Contacts'} />\n            <Filter />\n            {isLoading && !error && <b>Request in progress...</b>}\n            <ListItem />\n          </>\n        ) : (\n          <Title title={'Write contact'} />\n        )}\n      </>\n    </Container>\n  );\n}\n\nexport default Phonebook;\n"],"names":["getStateContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getStateFilter","filter","value","dispatch","useDispatch","arrContacts","useSelector","className","css","onSubmit","e","preventDefault","forms","currentTarget","elements","normalizedFilter","name","toLowerCase","find","contact","reset","alert","addContact","number","autoComplete","variant","placeholder","type","pattern","title","colorScheme","size","onChange","changeFilter","filterValue","filterArrayContacts","includes","map","id","as","onClick","deleteContact","Title","fontSize","useEffect","fetchContacts","maxW","length"],"sourceRoot":""}